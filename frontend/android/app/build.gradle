plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.learn_traffic_rules"
    compileSdk 36
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.learn_traffic_rules"
        minSdkVersion flutter.minSdkVersion
        targetSdk 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // ABI filtering handled by splits configuration below
    }
    
    // Split APK by architecture - temporarily disabled due to conflicts
    // splits {
    //     abi {
    //         enable true
    //         reset()
    //         include 'arm64-v8a', 'armeabi-v7a', 'x86_64'
    //         universalApk false
    //     }
    // }

    buildTypes {
        release {
            // Enable R8/ProGuard for code shrinking and obfuscation
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }
    
    // Fix for Kotlin compilation issues
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
    }
    
    // Bundle configuration for better distribution
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    // Add Google Play Core for deferred components
    implementation 'com.google.android.play:core:1.10.3'
}
